{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingm\\\\Desktop\\\\study\\\\lg-cns\\\\components-grouping\\\\compo\\\\src\\\\components\\\\randomDog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomDog = () => {\n  _s();\n  const [dogImage, setDogImage] = useState(\"\"); // 강아지 사진 URL 상태 관리\n  const [breeds, setBreeds] = useState({}); // 강아지 품종 리스트 상태 관리 (알파벳별로 그룹화)\n  const [selectedLetter, setSelectedLetter] = useState(\"\"); // 선택된 알파벳\n  const [loadingImage, setLoadingImage] = useState(false); // 이미지 로딩 상태 관리\n  const [loadingBreeds, setLoadingBreeds] = useState(false); // 품종 로딩 상태 관리\n\n  // 모든 품종 리스트 가져오기\n  useEffect(() => {\n    const fetchBreeds = async () => {\n      setLoadingBreeds(true);\n      try {\n        const response = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\n        const breedNames = Object.keys(response.data.message);\n        // 품종을 알파벳 기준으로 그룹화\n        const groupedBreeds = breedNames.reduce((acc, breed) => {\n          const letter = breed[0].toUpperCase();\n          if (!acc[letter]) acc[letter] = [];\n          acc[letter].push(breed);\n          return acc;\n        }, {});\n        setBreeds(groupedBreeds);\n      } catch (error) {\n        console.error(\"Error fetching dog breeds:\", error);\n      } finally {\n        setLoadingBreeds(false);\n      }\n    };\n    fetchBreeds();\n  }, []);\n\n  // 랜덤 강아지 사진 가져오기 (품종 선택 시)\n  const fetchBreedImage = async breed => {\n    setLoadingImage(true);\n    try {\n      const response = await axios.get(`https://dog.ceo/api/breed/${breed}/images/random`);\n      setDogImage(response.data.message);\n    } catch (error) {\n      console.error(`Error fetching random image for breed ${breed}:`, error);\n    } finally {\n      setLoadingImage(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      backgroundColor: \"#f7f7f7\",\n      fontFamily: \"Arial, sans-serif\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"350px\",\n        height: \"350px\",\n        border: \"2px dashed #ccc\",\n        borderRadius: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginRight: \"20px\",\n        backgroundColor: \"#fff\",\n        color: \"#888\"\n      },\n      children: loadingImage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : dogImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dogImage,\n        alt: \"Random Dog\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"16px\",\n          textAlign: \"center\"\n        },\n        children: [\"\\uAC15\\uC544\\uC9C0 \\uD488\\uC885\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), \" \\uB79C\\uB364\\uC73C\\uB85C \\uC0AC\\uC9C4\\uC744 \\uAC00\\uC838\\uC640\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"450px\",\n        height: \"350px\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50px\",\n          borderRight: \"1px solid #ccc\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"start\",\n          paddingTop: \"10px\",\n          backgroundColor: \"#f9f9f9\"\n        },\n        children: Object.keys(breeds).map(letter => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px\",\n            cursor: \"pointer\",\n            fontWeight: letter === selectedLetter ? \"bold\" : \"normal\",\n            color: letter === selectedLetter ? \"#333\" : \"#888\",\n            transition: \"color 0.2s\"\n          },\n          onClick: () => setSelectedLetter(letter),\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: \"auto\",\n          padding: \"10px\",\n          backgroundColor: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#555\",\n            marginBottom: \"10px\"\n          },\n          children: selectedLetter ? `${selectedLetter}로 시작하는 품종` : \"알파벳을 선택해주세요\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), selectedLetter && breeds[selectedLetter] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\",\n            padding: 0,\n            margin: 0\n          },\n          children: breeds[selectedLetter].map(breed => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: \"10px\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              backgroundColor: \"#f1f1f1\",\n              color: \"#333\",\n              cursor: \"pointer\",\n              textAlign: \"center\",\n              transition: \"background-color 0.2s\"\n            },\n            onClick: () => fetchBreedImage(breed),\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = \"#e0e0e0\";\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = \"#f1f1f1\";\n            },\n            children: breed\n          }, breed, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#888\"\n          },\n          children: \"\\uD488\\uC885 \\uC5C6\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomDog, \"w95MGOY8E6AyVPuTVZKXs3Kp7TI=\");\n_c = RandomDog;\nexport default RandomDog;\nvar _c;\n$RefreshReg$(_c, \"RandomDog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RandomDog","_s","dogImage","setDogImage","breeds","setBreeds","selectedLetter","setSelectedLetter","loadingImage","setLoadingImage","loadingBreeds","setLoadingBreeds","fetchBreeds","response","get","breedNames","Object","keys","data","message","groupedBreeds","reduce","acc","breed","letter","toUpperCase","push","error","console","fetchBreedImage","style","display","alignItems","justifyContent","height","backgroundColor","fontFamily","padding","children","width","border","borderRadius","marginRight","color","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","objectFit","fontSize","textAlign","flexDirection","boxShadow","borderRight","paddingTop","map","cursor","fontWeight","transition","onClick","flex","overflowY","marginBottom","listStyle","margin","onMouseEnter","e","target","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/kingm/Desktop/study/lg-cns/components-grouping/compo/src/components/randomDog.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RandomDog = () => {\r\n  const [dogImage, setDogImage] = useState(\"\"); // 강아지 사진 URL 상태 관리\r\n  const [breeds, setBreeds] = useState({}); // 강아지 품종 리스트 상태 관리 (알파벳별로 그룹화)\r\n  const [selectedLetter, setSelectedLetter] = useState(\"\"); // 선택된 알파벳\r\n  const [loadingImage, setLoadingImage] = useState(false); // 이미지 로딩 상태 관리\r\n  const [loadingBreeds, setLoadingBreeds] = useState(false); // 품종 로딩 상태 관리\r\n\r\n  // 모든 품종 리스트 가져오기\r\n  useEffect(() => {\r\n    const fetchBreeds = async () => {\r\n      setLoadingBreeds(true);\r\n      try {\r\n        const response = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\r\n        const breedNames = Object.keys(response.data.message);\r\n        // 품종을 알파벳 기준으로 그룹화\r\n        const groupedBreeds = breedNames.reduce((acc, breed) => {\r\n          const letter = breed[0].toUpperCase();\r\n          if (!acc[letter]) acc[letter] = [];\r\n          acc[letter].push(breed);\r\n          return acc;\r\n        }, {});\r\n        setBreeds(groupedBreeds);\r\n      } catch (error) {\r\n        console.error(\"Error fetching dog breeds:\", error);\r\n      } finally {\r\n        setLoadingBreeds(false);\r\n      }\r\n    };\r\n\r\n    fetchBreeds();\r\n  }, []);\r\n\r\n  // 랜덤 강아지 사진 가져오기 (품종 선택 시)\r\n  const fetchBreedImage = async (breed) => {\r\n    setLoadingImage(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dog.ceo/api/breed/${breed}/images/random`\r\n      );\r\n      setDogImage(response.data.message);\r\n    } catch (error) {\r\n      console.error(`Error fetching random image for breed ${breed}:`, error);\r\n    } finally {\r\n      setLoadingImage(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        backgroundColor: \"#f7f7f7\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      {/* 이미지 박스 */}\r\n      <div\r\n        style={{\r\n          width: \"350px\",\r\n          height: \"350px\",\r\n          border: \"2px dashed #ccc\",\r\n          borderRadius: \"10px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginRight: \"20px\",\r\n          backgroundColor: \"#fff\",\r\n          color: \"#888\",\r\n        }}\r\n      >\r\n        {loadingImage ? (\r\n          <p>Loading image...</p>\r\n        ) : dogImage ? (\r\n          <img\r\n            src={dogImage}\r\n            alt=\"Random Dog\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              objectFit: \"cover\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <p style={{ fontSize: \"16px\", textAlign: \"center\" }}>\r\n            강아지 품종을 선택해주세요. <br /> 랜덤으로 사진을 가져와요.\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* 품종 리스트 */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          width: \"450px\",\r\n          height: \"350px\",\r\n          backgroundColor: \"#fff\",\r\n          border: \"1px solid #ccc\",\r\n          borderRadius: \"10px\",\r\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n      >\r\n        {/* 알파벳 리스트 */}\r\n        <div\r\n          style={{\r\n            width: \"50px\",\r\n            borderRight: \"1px solid #ccc\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"start\",\r\n            paddingTop: \"10px\",\r\n            backgroundColor: \"#f9f9f9\",\r\n          }}\r\n        >\r\n          {Object.keys(breeds).map((letter) => (\r\n            <div\r\n              key={letter}\r\n              style={{\r\n                padding: \"10px\",\r\n                cursor: \"pointer\",\r\n                fontWeight: letter === selectedLetter ? \"bold\" : \"normal\",\r\n                color: letter === selectedLetter ? \"#333\" : \"#888\",\r\n                transition: \"color 0.2s\",\r\n              }}\r\n              onClick={() => setSelectedLetter(letter)}\r\n            >\r\n              {letter}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 선택된 알파벳의 품종 리스트 */}\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            overflowY: \"auto\",\r\n            padding: \"10px\",\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n        >\r\n          <h3\r\n            style={{ textAlign: \"center\", color: \"#555\", marginBottom: \"10px\" }}\r\n          >\r\n            {selectedLetter\r\n              ? `${selectedLetter}로 시작하는 품종`\r\n              : \"알파벳을 선택해주세요\"}\r\n          </h3>\r\n          {selectedLetter && breeds[selectedLetter] ? (\r\n            <ul\r\n              style={{\r\n                listStyle: \"none\",\r\n                padding: 0,\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {breeds[selectedLetter].map((breed) => (\r\n                <li\r\n                  key={breed}\r\n                  style={{\r\n                    marginBottom: \"10px\",\r\n                    padding: \"10px\",\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"#f1f1f1\",\r\n                    color: \"#333\",\r\n                    cursor: \"pointer\",\r\n                    textAlign: \"center\",\r\n                    transition: \"background-color 0.2s\",\r\n                  }}\r\n                  onClick={() => fetchBreedImage(breed)}\r\n                  onMouseEnter={(e) => {\r\n                    e.target.style.backgroundColor = \"#e0e0e0\";\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.target.style.backgroundColor = \"#f1f1f1\";\r\n                  }}\r\n                >\r\n                  {breed}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p style={{ textAlign: \"center\", color: \"#888\" }}>품종 없음</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomDog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}