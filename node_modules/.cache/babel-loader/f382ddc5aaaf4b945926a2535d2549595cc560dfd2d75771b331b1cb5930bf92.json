{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kingm\\\\Desktop\\\\study\\\\lg-cns\\\\components-grouping\\\\compo\\\\src\\\\components\\\\randomDog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomDog = () => {\n  _s();\n  const [dogImage, setDogImage] = useState(\"\"); // 강아지 사진 URL 상태 관리\n  const [breeds, setBreeds] = useState([]); // 강아지 품종 리스트 상태 관리\n  const [loadingImage, setLoadingImage] = useState(false); // 이미지 로딩 상태 관리\n  const [loadingBreeds, setLoadingBreeds] = useState(false); // 품종 로딩 상태 관리\n\n  // 모든 품종 리스트 가져오기\n  useEffect(() => {\n    const fetchBreeds = async () => {\n      setLoadingBreeds(true);\n      try {\n        const response = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\n        const breedNames = Object.keys(response.data.message);\n        setBreeds(breedNames);\n      } catch (error) {\n        console.error(\"Error fetching dog breeds:\", error);\n      } finally {\n        setLoadingBreeds(false);\n      }\n    };\n    fetchBreeds();\n  }, []);\n\n  // 랜덤 강아지 사진 가져오기 (품종 선택 시)\n  const fetchBreedImage = async breed => {\n    setLoadingImage(true);\n    try {\n      const response = await axios.get(`https://dog.ceo/api/breed/${breed}/images/random`);\n      setDogImage(response.data.message);\n    } catch (error) {\n      console.error(`Error fetching random image for breed ${breed}:`, error);\n    } finally {\n      setLoadingImage(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDC15 Random Dog Generator & Breed List \\uD83D\\uDC15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        height: \"300px\",\n        border: \"2px dashed #ccc\",\n        borderRadius: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: loadingImage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : dogImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dogImage,\n        alt: \"Random Dog\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"700px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDC3E Dog Breeds \\uD83D\\uDC3E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), loadingBreeds ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading breeds...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0,\n          maxHeight: \"300px\",\n          overflowY: \"scroll\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"10px\",\n          padding: \"10px\"\n        },\n        children: breeds.map((breed, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"10px\",\n            cursor: \"pointer\",\n            textDecoration: \"underline\",\n            color: \"blue\",\n            position: \"relative\"\n          },\n          onClick: () => fetchBreedImage(breed),\n          onMouseEnter: e => {\n            const tooltip = document.createElement(\"div\");\n            tooltip.className = \"tooltip\";\n            tooltip.textContent = `API: /breed/${breed}/images/random\nRequest: GET\nResponse: { message: \"Image URL\", status: \"success\" }`;\n            tooltip.style.position = \"absolute\";\n            tooltip.style.top = \"50%\";\n            tooltip.style.left = \"105%\";\n            tooltip.style.transform = \"translateY(-50%)\";\n            tooltip.style.background = \"#000\";\n            tooltip.style.color = \"#fff\";\n            tooltip.style.padding = \"5px 10px\";\n            tooltip.style.borderRadius = \"5px\";\n            tooltip.style.whiteSpace = \"pre-wrap\";\n            tooltip.style.fontSize = \"12px\";\n            e.target.appendChild(tooltip);\n          },\n          onMouseLeave: e => {\n            const tooltip = e.target.querySelector(\".tooltip\");\n            if (tooltip) e.target.removeChild(tooltip);\n          },\n          children: breed\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomDog, \"bnXW2Cptv7D6qbbBi9+O8QpoAbY=\");\n_c = RandomDog;\nexport default RandomDog;\nvar _c;\n$RefreshReg$(_c, \"RandomDog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RandomDog","_s","dogImage","setDogImage","breeds","setBreeds","loadingImage","setLoadingImage","loadingBreeds","setLoadingBreeds","fetchBreeds","response","get","breedNames","Object","keys","data","message","error","console","fetchBreedImage","breed","style","display","flexDirection","alignItems","justifyContent","height","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","width","border","borderRadius","marginBottom","src","alt","objectFit","maxWidth","textAlign","listStyle","padding","maxHeight","overflowY","map","index","cursor","textDecoration","color","position","onClick","onMouseEnter","e","tooltip","document","createElement","className","textContent","top","left","transform","background","whiteSpace","fontSize","target","appendChild","onMouseLeave","querySelector","removeChild","_c","$RefreshReg$"],"sources":["C:/Users/kingm/Desktop/study/lg-cns/components-grouping/compo/src/components/randomDog.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RandomDog = () => {\r\n  const [dogImage, setDogImage] = useState(\"\"); // 강아지 사진 URL 상태 관리\r\n  const [breeds, setBreeds] = useState([]); // 강아지 품종 리스트 상태 관리\r\n  const [loadingImage, setLoadingImage] = useState(false); // 이미지 로딩 상태 관리\r\n  const [loadingBreeds, setLoadingBreeds] = useState(false); // 품종 로딩 상태 관리\r\n\r\n  // 모든 품종 리스트 가져오기\r\n  useEffect(() => {\r\n    const fetchBreeds = async () => {\r\n      setLoadingBreeds(true);\r\n      try {\r\n        const response = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\r\n        const breedNames = Object.keys(response.data.message);\r\n        setBreeds(breedNames);\r\n      } catch (error) {\r\n        console.error(\"Error fetching dog breeds:\", error);\r\n      } finally {\r\n        setLoadingBreeds(false);\r\n      }\r\n    };\r\n\r\n    fetchBreeds();\r\n  }, []);\r\n\r\n  // 랜덤 강아지 사진 가져오기 (품종 선택 시)\r\n  const fetchBreedImage = async (breed) => {\r\n    setLoadingImage(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dog.ceo/api/breed/${breed}/images/random`\r\n      );\r\n      setDogImage(response.data.message);\r\n    } catch (error) {\r\n      console.error(`Error fetching random image for breed ${breed}:`, error);\r\n    } finally {\r\n      setLoadingImage(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n      }}\r\n    >\r\n      <h1>🐕 Random Dog Generator & Breed List 🐕</h1>\r\n\r\n      {/* 이미지 공간 고정 */}\r\n      <div\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"300px\",\r\n          border: \"2px dashed #ccc\",\r\n          borderRadius: \"10px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        {loadingImage ? (\r\n          <p>Loading image...</p>\r\n        ) : (\r\n          dogImage && (\r\n            <img\r\n              src={dogImage}\r\n              alt=\"Random Dog\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                objectFit: \"cover\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {/* 품종 리스트 */}\r\n      <div style={{ maxWidth: \"700px\", textAlign: \"center\" }}>\r\n        <h2>🐾 Dog Breeds 🐾</h2>\r\n        {loadingBreeds ? (\r\n          <p>Loading breeds...</p>\r\n        ) : (\r\n          <ul\r\n            style={{\r\n              listStyle: \"none\",\r\n              padding: 0,\r\n              maxHeight: \"300px\",\r\n              overflowY: \"scroll\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"10px\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {breeds.map((breed, index) => (\r\n              <li\r\n                key={index}\r\n                style={{\r\n                  marginBottom: \"10px\",\r\n                  cursor: \"pointer\",\r\n                  textDecoration: \"underline\",\r\n                  color: \"blue\",\r\n                  position: \"relative\",\r\n                }}\r\n                onClick={() => fetchBreedImage(breed)}\r\n                onMouseEnter={(e) => {\r\n                  const tooltip = document.createElement(\"div\");\r\n                  tooltip.className = \"tooltip\";\r\n                  tooltip.textContent = `API: /breed/${breed}/images/random\r\nRequest: GET\r\nResponse: { message: \"Image URL\", status: \"success\" }`;\r\n                  tooltip.style.position = \"absolute\";\r\n                  tooltip.style.top = \"50%\";\r\n                  tooltip.style.left = \"105%\";\r\n                  tooltip.style.transform = \"translateY(-50%)\";\r\n                  tooltip.style.background = \"#000\";\r\n                  tooltip.style.color = \"#fff\";\r\n                  tooltip.style.padding = \"5px 10px\";\r\n                  tooltip.style.borderRadius = \"5px\";\r\n                  tooltip.style.whiteSpace = \"pre-wrap\";\r\n                  tooltip.style.fontSize = \"12px\";\r\n                  e.target.appendChild(tooltip);\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  const tooltip = e.target.querySelector(\".tooltip\");\r\n                  if (tooltip) e.target.removeChild(tooltip);\r\n                }}\r\n              >\r\n                {breed}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomDog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BD,gBAAgB,CAAC,IAAI,CAAC;MACtB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,qCAAqC,CAAC;QACvE,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;QACrDZ,SAAS,CAACQ,UAAU,CAAC;MACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRT,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvCd,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC9B,6BAA6BS,KAAK,gBACpC,CAAC;MACDlB,WAAW,CAACQ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyCG,KAAK,GAAG,EAAEH,KAAK,CAAC;IACzE,CAAC,SAAS;MACRX,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACER,OAAA;IACEuB,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEF9B,OAAA;MAAA8B,QAAA,EAAI;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhDlC,OAAA;MACEuB,KAAK,EAAE;QACLY,KAAK,EAAE,OAAO;QACdP,MAAM,EAAE,OAAO;QACfQ,MAAM,EAAE,iBAAiB;QACzBC,YAAY,EAAE,MAAM;QACpBb,OAAO,EAAE,MAAM;QACfE,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBW,YAAY,EAAE;MAChB,CAAE;MAAAR,QAAA,EAEDvB,YAAY,gBACXP,OAAA;QAAA8B,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEvB/B,QAAQ,iBACNH,OAAA;QACEuC,GAAG,EAAEpC,QAAS;QACdqC,GAAG,EAAC,YAAY;QAChBjB,KAAK,EAAE;UACLY,KAAK,EAAE,MAAM;UACbP,MAAM,EAAE,MAAM;UACda,SAAS,EAAE,OAAO;UAClBJ,YAAY,EAAE;QAChB;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAEJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNlC,OAAA;MAAKuB,KAAK,EAAE;QAAEmB,QAAQ,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAb,QAAA,gBACrD9B,OAAA;QAAA8B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBzB,aAAa,gBACZT,OAAA;QAAA8B,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAExBlC,OAAA;QACEuB,KAAK,EAAE;UACLqB,SAAS,EAAE,MAAM;UACjBC,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE,QAAQ;UACnBX,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,MAAM;UACpBQ,OAAO,EAAE;QACX,CAAE;QAAAf,QAAA,EAEDzB,MAAM,CAAC2C,GAAG,CAAC,CAAC1B,KAAK,EAAE2B,KAAK,kBACvBjD,OAAA;UAEEuB,KAAK,EAAE;YACLe,YAAY,EAAE,MAAM;YACpBY,MAAM,EAAE,SAAS;YACjBC,cAAc,EAAE,WAAW;YAC3BC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAE;UACZ,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAMjC,eAAe,CAACC,KAAK,CAAE;UACtCiC,YAAY,EAAGC,CAAC,IAAK;YACnB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;YAC7CF,OAAO,CAACG,SAAS,GAAG,SAAS;YAC7BH,OAAO,CAACI,WAAW,GAAG,eAAevC,KAAK;AAC5D;AACA,sDAAsD;YACpCmC,OAAO,CAAClC,KAAK,CAAC8B,QAAQ,GAAG,UAAU;YACnCI,OAAO,CAAClC,KAAK,CAACuC,GAAG,GAAG,KAAK;YACzBL,OAAO,CAAClC,KAAK,CAACwC,IAAI,GAAG,MAAM;YAC3BN,OAAO,CAAClC,KAAK,CAACyC,SAAS,GAAG,kBAAkB;YAC5CP,OAAO,CAAClC,KAAK,CAAC0C,UAAU,GAAG,MAAM;YACjCR,OAAO,CAAClC,KAAK,CAAC6B,KAAK,GAAG,MAAM;YAC5BK,OAAO,CAAClC,KAAK,CAACsB,OAAO,GAAG,UAAU;YAClCY,OAAO,CAAClC,KAAK,CAACc,YAAY,GAAG,KAAK;YAClCoB,OAAO,CAAClC,KAAK,CAAC2C,UAAU,GAAG,UAAU;YACrCT,OAAO,CAAClC,KAAK,CAAC4C,QAAQ,GAAG,MAAM;YAC/BX,CAAC,CAACY,MAAM,CAACC,WAAW,CAACZ,OAAO,CAAC;UAC/B,CAAE;UACFa,YAAY,EAAGd,CAAC,IAAK;YACnB,MAAMC,OAAO,GAAGD,CAAC,CAACY,MAAM,CAACG,aAAa,CAAC,UAAU,CAAC;YAClD,IAAId,OAAO,EAAED,CAAC,CAACY,MAAM,CAACI,WAAW,CAACf,OAAO,CAAC;UAC5C,CAAE;UAAA3B,QAAA,EAEDR;QAAK,GAhCD2B,KAAK;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiCR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9IID,SAAS;AAAAwE,EAAA,GAATxE,SAAS;AAgJf,eAAeA,SAAS;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}